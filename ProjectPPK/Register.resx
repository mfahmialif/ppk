<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>